# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    environment:
      LEXICON_DIR: /opt/db/
      AUTH_KEY: abcdef
    docker:
      # specify the version
      - image: golang:alpine

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/domino14/macondo
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "ad:9e:01:fa:fa:e7:03:a4:49:74:98:91:52:a8:dc:3c"
      - run:
          name: Install git, ssh, and build-base (for tests)
          command: apk update && apk upgrade && apk add git openssh build-base
      - run:
          name: Install ssl
          command: apk add --update ca-certificates openssl && update-ca-certificates
      - run: if [ ! -n "$(grep "^bitbucket.org " ~/.ssh/known_hosts)" ]; then ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts 2>/dev/null; fi
      - run:
          name: Clone word dbs Webolith repo
          command: git clone git@bitbucket.org:cesar_del_solar/webolith-word-dbs.git /opt/webolith-word-dbs
      - run: mkdir $LEXICON_DIR
      - run: cd /opt/webolith-word-dbs && tar xzvf dbs.tar.gz
      - run: mv /opt/webolith-word-dbs/*.txt $LEXICON_DIR
      # specify any bash command here prefixed with `run: `
      - run: go test -v ./...

  build_docker:
    working_directory: /go/src/github.com/domino14/macondo
    environment:
      REPO: /go/src/github.com/domino14/macondo
    docker:
      - image: golang:alpine
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install curl
          command: apk --no-cache add curl
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.12.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Build and push Docker images to Dockerhub
          command: |
            cd $REPO && \
              docker build -t domino14/macondo:$CIRCLE_SHA1 \
                -t domino14/macondo:latest .

            docker login --username domino14 --password $DOCKER_PASSWORD
            docker push domino14/macondo:$CIRCLE_SHA1
            docker push domino14/macondo:latest

  deploy:
    working_directory: /opt/
    environment:
      # This will get created by the clone below.
      KUBECONFIG: /opt/webolith-private/admin.conf
    docker:
      - image: domino14/aerolith-deployer
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ad:9e:01:fa:fa:e7:03:a4:49:74:98:91:52:a8:dc:3c"
      - run: if [ ! -n "$(grep "^github.com " ~/.ssh/known_hosts)" ]; then ssh-keyscan github.com >> ~/.ssh/known_hosts 2>/dev/null; fi
      - run: git clone git@github.com:domino14/aerolith-infra
      - run: if [ ! -n "$(grep "^bitbucket.org " ~/.ssh/known_hosts)" ]; then ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts 2>/dev/null; fi
      - run:
          name: Clone private Webolith repo
          command: git clone git@bitbucket.org:cesar_del_solar/webolith-private.git /opt/webolith-private
      - run: fab create_k8s_configs_macondo:prod
      - run: fab deploy_macondo:prod

workflows:
  version: 2
  build_app:
    jobs:
      - build
      - build_docker:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_docker
          filters:
            branches:
              only: master